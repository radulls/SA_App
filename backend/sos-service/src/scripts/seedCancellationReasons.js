const mongoose = require('mongoose');
const SosCancellationReason = require('../models/SosCancellationReason');
require('dotenv').config();

// üìå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
mongoose.connect(process.env.MONGO_URI, {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
  .then(() => console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —É—Å–ø–µ—à–Ω–æ'))
  .catch((err) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', err);
    process.exit(1);
  });

// üìå –°–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω –æ—Ç–º–µ–Ω—ã —Å–∏–≥–Ω–∞–ª–∞ SOS
const cancellationReasons = [
  { reason: '–ü—Ä–∏—á–∏–Ω–∞ —É–≥—Ä–æ–∑—ã –ø—Ä–æ–ø–∞–ª–∞' },
  { reason: '–£—á–∞—Å—Ç–Ω–∏–∫–∏ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –æ–∫–∞–∑–∞–ª–∏ –ø–æ–º–æ—â—å' }
];

// üìå –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –ø—Ä–∏—á–∏–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
const seedCancellationReasons = async () => {
  try {
    // –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–µ—Ä–µ–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –Ω–æ–≤—ã—Ö –ø—Ä–∏—á–∏–Ω (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    await SosCancellationReason.deleteMany({});
    console.log('üóë –¢–∞–±–ª–∏—Ü–∞ `sos_cancellation_reasons` –æ—á–∏—â–µ–Ω–∞');

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–º–µ–Ω—ã
    await SosCancellationReason.insertMany(cancellationReasons);
    console.log('‚úÖ –ü—Ä–∏—á–∏–Ω—ã –æ—Ç–º–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    mongoose.connection.close();
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–Ω–µ—Å–µ–Ω–∏–∏ –ø—Ä–∏—á–∏–Ω –æ—Ç–º–µ–Ω—ã:', error);
    mongoose.connection.close();
  }
};

// üìå –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é
seedCancellationReasons();
