const BlockedUsers = require('../models/BlockedUsers');

exports.blockUser = async (req, res) => {
  try {
    const { userId } = req.body;
    const blockerId = req.user.id; // ID –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if (!userId) return res.status(400).json({ message: "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω" });

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü–µ BlockedUsers
    await BlockedUsers.create({ blocker: blockerId, blocked: userId });

    res.json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏" });
  }
};

exports.unblockUser = async (req, res) => {
  try {
    const { userId } = req.body;
    const blockerId = req.user.id;

    if (!userId) return res.status(400).json({ message: "ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–∫–∞–∑–∞–Ω" });

    // –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ
    await BlockedUsers.findOneAndDelete({ blocker: blockerId, blocked: userId });

    res.json({ message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏" });
  }
};

exports.isBlocked = async (req, res) => {
  try {
    const { userId } = req.params;
    const blockerId = req.user.id;

    const isBlocked = await BlockedUsers.exists({ blocker: blockerId, blocked: userId });

    res.json({ isBlocked: Boolean(isBlocked) });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏" });
  }
};

exports.getBlockedUsers = async (req, res) => {
  try {
    const blockerId = req.user.id;
    console.log(`üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${blockerId}`);

    const blockedUsers = await BlockedUsers.find({ blocker: blockerId })
      .populate('blocked', 'firstName lastName username profileImage');

    console.log("‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:", blockedUsers);

    res.json({ blockedUsers });
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö:", error);
    res.status(500).json({ message: "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö" });
  }
};

