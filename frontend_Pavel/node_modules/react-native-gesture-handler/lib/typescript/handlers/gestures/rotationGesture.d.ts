import { ContinousBaseGesture } from 'react-native-gesture-handler/lib/typescript/handlers/gestures/gesture';
import type { RotationGestureHandlerEventPayload } from 'react-native-gesture-handler/lib/typescript/handlers/GestureHandlerEventPayload';
import { GestureUpdateEvent } from 'react-native-gesture-handler/lib/typescript/handlers/gestureHandlerCommon';
type RotationGestureChangeEventPayload = {
    rotationChange: number;
};
export declare class RotationGesture extends ContinousBaseGesture<RotationGestureHandlerEventPayload, RotationGestureChangeEventPayload> {
    constructor();
    onChange(callback: (event: GestureUpdateEvent<RotationGestureHandlerEventPayload & RotationGestureChangeEventPayload>) => void): this;
}
export type RotationGestureType = InstanceType<typeof RotationGesture>;
export {};
