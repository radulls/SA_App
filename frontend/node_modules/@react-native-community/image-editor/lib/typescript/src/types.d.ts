import type { Spec } from './NativeRNCImageEditor.ts';
type ImageCropDataFromSpec = Parameters<Spec['cropImage']>[1];
export interface ImageCropData extends Omit<ImageCropDataFromSpec, 'headers' | 'resizeMode' | 'format'> {
    headers?: Record<string, string> | Headers;
    format?: 'png' | 'jpeg' | 'webp';
    resizeMode?: 'contain' | 'cover' | 'stretch' | 'center';
}
export interface CropResult extends Omit<AsyncReturnType<Spec['cropImage']>, 'type'> {
    type: 'image/jpeg' | 'image/png' | 'image/webp';
}
type AsyncReturnType<T> = T extends (...args: any[]) => Promise<infer R> ? R : never;
export {};
//# sourceMappingURL=types.d.ts.map