import axios from 'axios';
import AsyncStorage from '@react-native-async-storage/async-storage';

const API_BASE_URL = 'http://192.168.3.16:5002/api/sos';
export const SOS_IMAGE_URL = 'http://192.168.3.16:5002/';

const api = axios.create({
  baseURL: API_BASE_URL,
  headers: { 'Content-Type': 'application/json' }
});

export interface SosTag {
  _id: string;
  name: string;
}

// üìå –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞—ë–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏
export const getAuthHeaders = async (): Promise<{ Authorization: string; userId: string }> => {
  const token = await AsyncStorage.getItem('token');

  if (!token) {
    console.error("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
    throw new Error("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ.");
  }

  try {
    const payloadBase64 = token.split('.')[1];
    const payloadString = atob(payloadBase64);
    const payload = JSON.parse(payloadString);

    if (!payload || (!payload.id && !payload._id)) {
      throw new Error("‚ùå –û—à–∏–±–∫–∞: userId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–æ–∫–µ–Ω–µ");
    }

    const userId = payload.id || payload._id;
    console.log("‚úÖ userId —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω:", userId);

    return {  // ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç
      Authorization: `Bearer ${token}`,
      userId,
    };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:", error);
    throw new Error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–∫–µ–Ω–∞. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ.");
  }
};


// üìå –°–æ–∑–¥–∞—Ç—å SOS-—Å–∏–≥–Ω–∞–ª
export const createSosSignal = async (sosData: FormData) => {
  const headers = await getAuthHeaders(); // –£–±–µ–¥–∏—Å—å, —á—Ç–æ `Authorization` –µ—Å—Ç—å

  return api.post('/create', sosData, {
    headers: {
      ...headers, 
      'Content-Type': 'multipart/form-data', // ‚ùå –ù–µ —Å—Ç–∞–≤—å `application/json`
    },
  });
};

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ SOS-—Å–∏–≥–Ω–∞–ª—ã
export const getSosSignals = async () => {
  return api.get('/');
};

// üìå –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π SOS-—Å–∏–≥–Ω–∞–ª
export const getSosSignalById = async (sosId: string) => {
  return api.get(`/${sosId}`);
};

// üìå –£–¥–∞–ª–∏—Ç—å SOS-—Å–∏–≥–Ω–∞–ª
export const deleteSosSignal = async (sosId: string) => {
  const headers = await getAuthHeaders();
  return api.delete(`/${sosId}`, { headers });
};

// üìå –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ–º–æ—â—å
export const markAsHelper = async (sosId: string) => {
  const headers = await getAuthHeaders();
  return api.post('/help', { sosId }, { headers });
};

// üìå –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â–Ω–∏–∫–æ–≤ –¥–ª—è SOS-—Å–∏–≥–Ω–∞–ª–∞
export const getSosHelpers = async (sosId: string) => {
  return api.get(`/helpers/${sosId}`);
};

// üìå –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–≥–∏ SOS
export const getSosTags = async (): Promise<SosTag[]> => {
  try {
    const response = await api.get<SosTag[]>('/tags');
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SOS-—Ç—ç–≥–æ–≤:', error);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å SOS-—Ç—ç–≥–∏');
  }
};

export default api;
