import { loadFfmpeg } from '../../external/ffmpegLoader.web';

interface CropOptions {
  x: number;
  y: number;
  width: number;
  height: number;
}

interface ProcessVideoOptions {
  uri: string;
  start: number;
  end: number;
  crop?: CropOptions;
}

export async function processVideo({
  uri,
  start,
  end,
  crop,
}: ProcessVideoOptions): Promise<string | null> {
  console.log('‚öôÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ:', { uri, start, end, crop });

  try {
    const { ffmpeg, fetchFile } = await loadFfmpeg();

    if (!ffmpeg.isLoaded()) {
      console.log('ü™Ñ –ó–∞–≥—Ä—É–∂–∞–µ–º ffmpeg...');
      await ffmpeg.load();
    }

    const inputFileName = 'input.mp4';
    const outputFileName = 'output.mp4';

    const inputData = uri.startsWith('data:')
      ? Uint8Array.from(atob(uri.split(',')[1]), c => c.charCodeAt(0))
      : await fetchFile(uri);

    console.log('üíæ –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª –≤–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é FS:', inputFileName);
    ffmpeg.FS('writeFile', inputFileName, inputData);

    const args = ['-ss', `${start}`, '-i', inputFileName, '-t', `${end - start}`];

    if (crop) {
      const { x, y, width, height } = crop;
      args.push('-vf', `crop=${width}:${height}:${x}:${y}`);
      console.log(`‚úÇÔ∏è –î–æ–±–∞–≤–ª—è–µ–º crop-—Ñ–∏–ª—å—Ç—Ä: crop=${width}:${height}:${x}:${y}`);
    }

    args.push('-c:v', 'libx264', '-preset', 'fast', '-crf', '22', '-c:a', 'copy', outputFileName);
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º ffmpeg —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏:', args.join(' '));

    await ffmpeg.run(...args);

    console.log('üì§ –ß–∏—Ç–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ FS...');
    const data = ffmpeg.FS('readFile', outputFileName);
    if (!data || !data.buffer) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª.');
      return null;
    }

    console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º URL...');
    const videoBlob = new Blob([data.buffer], { type: 'video/mp4' });
    const videoUrl = URL.createObjectURL(videoBlob);

    console.log('üßπ –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...');
    ffmpeg.FS('unlink', inputFileName);
    ffmpeg.FS('unlink', outputFileName);

    return videoUrl;
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ:', err);
    return null;
  }
}
