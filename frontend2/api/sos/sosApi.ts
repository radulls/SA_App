import axios from 'axios';
import AsyncStorage from '@react-native-async-storage/async-storage';

const API_BASE_URL = 'http://89.108.118.249:5002/api/sos';
export const SOS_IMAGE_URL = 'http://89.108.118.249:5002/';

const api = axios.create({
  baseURL: API_BASE_URL,
  headers: { 'Content-Type': 'application/json' }
});

export interface SosTag {
  _id: string;
  name: string;
}

// üìå –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞—ë–º –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏
export const getAuthHeaders = async (): Promise<{ Authorization: string; userId: string }> => {
  const token = await AsyncStorage.getItem('token');

  if (!token) {
    console.error("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç");
    throw new Error("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ.");
  }

  try {
    const payloadBase64 = token.split('.')[1];
    const payloadString = atob(payloadBase64);
    const payload = JSON.parse(payloadString);

    if (!payload || (!payload.id && !payload._id)) {
      throw new Error("‚ùå –û—à–∏–±–∫–∞: userId –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Ç–æ–∫–µ–Ω–µ");
    }

    const userId = payload.id || payload._id;
    console.log("‚úÖ userId —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á—ë–Ω:", userId);

    return {  // ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç
      Authorization: `Bearer ${token}`,
      userId,
    };
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:", error);
    throw new Error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–æ–∫–µ–Ω–∞. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ.");
  }
};

// üìå –°–æ–∑–¥–∞—Ç—å SOS-—Å–∏–≥–Ω–∞–ª
export const createSosSignal = async (sosData: FormData) => {
  const headers = await getAuthHeaders(); // –£–±–µ–¥–∏—Å—å, —á—Ç–æ `Authorization` –µ—Å—Ç—å

  return api.post('/create', sosData, {
    headers: {
      ...headers, 
      'Content-Type': 'multipart/form-data', // ‚ùå –ù–µ —Å—Ç–∞–≤—å `application/json`
    },
  });
};

// üìå –û–±–Ω–æ–≤–∏—Ç—å SOS-—Å–∏–≥–Ω–∞–ª
export const updateSosSignal = async (sosId: string, sosData: FormData) => {
  const headers = await getAuthHeaders();

  return api.put(`/${sosId}`, sosData, {
    headers: {
      ...headers,
      'Content-Type': 'multipart/form-data',
    },
  });
};

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ SOS-—Å–∏–≥–Ω–∞–ª—ã
export const getSosSignals = async () => {
  return api.get('/');
};

// üìå –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π SOS-—Å–∏–≥–Ω–∞–ª
export const getSosSignalById = async (sosId: string) => {
  return api.get(`/${sosId}`);
};

export const getSosSignalByUserId = async (userId: string) => {
  try {
    console.log(`üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ SOS-—Å–µ—Ä–≤–∏—Å: ${API_BASE_URL}/active?userId=${userId}`);
    
    const response = await api.get(`/active?userId=${userId}`);

    console.log("‚úÖ –ü–æ–ª—É—á–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π SOS-—Å–∏–≥–Ω–∞–ª:", response.data);
    return response.data;
  } catch (error: any) {
    if (error.response?.status === 404) {
      console.warn(`–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId} –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ SOS-—Å–∏–≥–Ω–∞–ª–∞.`);
      return null; // <== –í–æ–∑–≤—Ä–∞—â–∞–µ–º null, –∞ –Ω–µ –∫–∏–¥–∞–µ–º –æ—à–∏–±–∫—É!
    }
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ SOS-—Å–∏–≥–Ω–∞–ª–∞:", error);
    throw error;
  }
};

// üìå –£–¥–∞–ª–∏—Ç—å SOS-—Å–∏–≥–Ω–∞–ª
export const cancelSosSignal = async (sosId: string, reasonId: string) => {
  const headers = await getAuthHeaders();
  try {
    const response = await api.post(`/cancel/${sosId}`, { reasonId }, { headers });
    return response.data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã SOS-—Å–∏–≥–Ω–∞–ª–∞:", error);
    throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å SOS-—Å–∏–≥–Ω–∞–ª");
  }
};

// üìå –û—Ç–º–µ—Ç–∏—Ç—å –ø–æ–º–æ—â—å
export const markAsHelper = async (sosId: string) => {
  const headers = await getAuthHeaders();
  return api.post('/help', { sosId }, { headers });
};

// üìå –ü–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â–Ω–∏–∫–æ–≤ –¥–ª—è SOS-—Å–∏–≥–Ω–∞–ª–∞
export const getSosHelpers = async (sosId: string): Promise<any> => {
  return api.get(`/helpers/${sosId}`);
};

// üìå –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–º–æ—â–Ω–∏–∫–æ–º SOS-—Å–∏–≥–Ω–∞–ª–∞
export const isUserHelper = async (sosId: string): Promise<boolean> => {
  const headers = await getAuthHeaders();
  try {
    const response = await api.get(`/helpers/check/${sosId}`, { headers });
    return response.data.isHelper; // ‚úÖ true/false
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–º–æ—â–Ω–∏–∫–∞:", error);
    return false;
  }
};

// üìå –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–≥–∏ SOS
export const getSosTags = async (): Promise<SosTag[]> => {
  try {
    const response = await api.get<SosTag[]>('/tags');
    return response.data;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ SOS-—Ç—ç–≥–æ–≤:', error);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å SOS-—Ç—ç–≥–∏');
  }
};

// üìå –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–∏—á–∏–Ω –æ—Ç–º–µ–Ω—ã SOS-—Å–∏–≥–Ω–∞–ª–∞
export const getCancellationReasons = async () => {
  try {
    const response = await api.get('/cancellation-reasons');
    return response.data;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏—á–∏–Ω –æ—Ç–º–µ–Ω—ã:', error);
    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–º–µ–Ω—ã');
  }
};

export const confirmHelpers = async (sosId: string, helpers: string[]) => {
  const headers = await getAuthHeaders();
  return api.post('/confirm-helpers', { sosId, helpers }, { headers });
};

// üìå –û—Ç–º–µ–Ω–∞ —É—á–∞—Å—Ç–∏—è –≤ SOS-—Å–∏–≥–Ω–∞–ª–µ
export const leaveSosSignal = async (sosId: string) => {
  const headers = await getAuthHeaders();
  try {
    const response = await api.post('/leave', { sosId }, { headers });
    return response.data;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ SOS-—Å–∏–≥–Ω–∞–ª–∞:", error);
    throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏ –∏–∑ SOS-—Å–∏–≥–Ω–∞–ª–∞");
  }
};

// üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–∑–¥–∞–Ω–∏—é SOS-—Å–∏–≥–Ω–∞–ª–∞
export const checkSosAccess = async () => {
  const headers = await getAuthHeaders();
  try {
    const response = await api.get('/check-access', { headers });
    console.log("üì° ‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response.data);
    return response.data;
  } catch (error: any) {
    // console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞ –∫ SOS:", error);

    // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª 403, –Ω–æ –≤ `response.data` –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ—ë
    if (error.response && error.response.status === 403) {
      console.log("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º 403:", error.response.data);
      return error.response.data;
    }
    return { access: false, message: "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ—Å—Ç—É–ø–∞" };
  }
};

export const createSosTag = async (name: string): Promise<SosTag> => {
  const headers = await getAuthHeaders();

  try {
    const response = await api.post('/tags', { name }, { headers });
    return response.data;
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ SOS-—Ç–µ–≥–∞:', error.response?.data || error.message);
    throw new Error(error.response?.data?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ–≥');
  }
};

export const deleteSosTag = async (tagId: string) => {
  const headers = await getAuthHeaders();

  console.log("üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ DELETE –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Ç–µ–≥–∞:", tagId);

  const response = await api.delete(`/tags/${tagId}`, {
    headers
  });

  console.log("üì• –û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ–≥–∞:", response.data);
  return response.data;
};


export default api;