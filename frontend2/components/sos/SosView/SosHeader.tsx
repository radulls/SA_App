import React, { useEffect, useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity } from 'react-native';
import { useRouter } from 'expo-router';
import CloseIcon from '../../svgConvertedIcons/closeIcon';
import MoreOptionsIcon from '../../svgConvertedIcons/MoreOptionsIcon';
import SosHelpersIcon from '../../svgConvertedIcons/sosIcons/sosHelpersIcon';
import { getSosHelpers } from '@/api/sos/sosApi';
import HelperActionModal from '../HelperActionModal';

interface SosHeaderProps {
  onClose: () => void;
  sosId: string;
}

const SosHeader: React.FC<SosHeaderProps> = ({ onClose, sosId }) => {
  const [helperCount, setHelperCount] = useState(0);
  const [isModalVisible, setIsModalVisible] = useState(false); // üî• –î–æ–±–∞–≤–∏–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –º–æ–¥–∞–ª–∫–∏
  const router = useRouter();

  useEffect(() => {
    fetchHelpers();
  }, [sosId]);

  const fetchHelpers = async () => {
    try {
      const response = await getSosHelpers(sosId);
      setHelperCount(response.data.length);
    } catch (error) {
      console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–º–æ—â–Ω–∏–∫–æ–≤:", error);
    }
  };

  // üìå –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø–æ–º–æ—â–Ω–∏–∫–∞–º–∏
  const navigateToHelpers = () => {
    router.push({
      pathname: '/sos-helpers',
      params: { sosId },
    });
  };

  return (
<View style={styles.topItems}>
  {/* –ü–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–∑–∞–∫—Ä—ã—Ç—å) */}
  <View style={styles.leftContainer}>
    <TouchableOpacity style={styles.closeIcon} onPress={onClose}>
      <CloseIcon fill="#000" />
    </TouchableOpacity>
  </View>

  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
  <View style={styles.titleContainer}>
    <Text style={styles.sosTitle}>–°–∏–≥–Ω–∞–ª SOS</Text>
  </View>

  {/* –¢—Ä–µ—Ç–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (—Ö–µ–ª–ø–µ—Ä—Å, —Ö–µ–ª–ø–µ—Ä–∫–∞—É–Ω—Ç, –æ–ø—à–Ω—Å) */}
  <View style={styles.rightContainer}>
    <View style={styles.options}>
      <View style={styles.helpers}>
        <TouchableOpacity style={styles.closeIcon} onPress={navigateToHelpers}>
          <SosHelpersIcon />
        </TouchableOpacity>
        {helperCount > 0 && <Text style={styles.helperCount}>{helperCount}</Text>}
      </View>

      <TouchableOpacity style={[styles.closeIcon, styles.moreOptions]} onPress={() => setIsModalVisible(true)}>
        <MoreOptionsIcon fill="#000" />
      </TouchableOpacity>
    </View>
  </View>

  {/* –ú–æ–¥–∞–ª–∫–∞ */}
  <HelperActionModal
    visible={isModalVisible}
    onClose={() => setIsModalVisible(false)}
    sosId={sosId}
    mode="options" // –ú–µ–Ω—é —Å "–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è", "–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è"
  />
</View>
  );
};

const styles = StyleSheet.create({
  topItems: {
    paddingHorizontal: 16,
    paddingTop: 55,
    paddingBottom: 56,
    width: '100%',
    maxWidth: 600,
    flexDirection: 'row', // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
    justifyContent: 'space-between', // –ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏
    alignItems: 'center', // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
  },
  leftContainer: {
    width: 110, // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    justifyContent: 'center',
  },
  closeIcon: {
    zIndex: 20,
  },
  titleContainer: {
    flex: 1, // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑–∞–Ω–∏–º–∞–µ—Ç –≤—Å—ë –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
    justifyContent: 'center',
    alignItems: 'center',
  },
  sosTitle: {
    textAlign: 'center',
    fontSize: 15,
    fontFamily: 'SFUIDisplay-bold',
  },
  rightContainer: {
    width: 110, // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞ –¥–ª—è —Ç—Ä–µ—Ç—å–µ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    justifyContent: 'center',
    alignItems: 'flex-end', // –≠–ª–µ–º–µ–Ω—Ç—ã –≤—ã—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –ø–æ –ø—Ä–∞–≤–æ–º—É –∫—Ä–∞—é
  },
  options: {
    flexDirection: 'row', // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è helper –∏ more options
    alignItems: 'center', // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —Ü–µ–Ω—Ç—Ä—É –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
  },
  helperCount: {
    color: '#000',
    fontSize: 14,
    fontFamily: 'SFUIDisplay-bold',
    paddingLeft: 6, // –ù–µ–º–Ω–æ–≥–æ –æ—Ç—Å—Ç—É–ø–∞ –æ—Ç –∏–∫–æ–Ω–∫–∏
  },
  helpers: {
    flexDirection: 'row', // –≠–ª–µ–º–µ–Ω—Ç—ã –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—é—Ç—Å—è –≤ —Ä—è–¥
    alignItems: 'center', // –ò–∫–æ–Ω–∫–∞ –∏ —Å—á–µ—Ç—á–∏–∫ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
  },
  moreOptions: {
    marginLeft: 20, // –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –∏–∫–æ–Ω–∫–∞–º–∏
  }
});




export default SosHeader;
